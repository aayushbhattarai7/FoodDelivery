const express = require("express");
const router = express.Router();
const Item = require('../models/uploadItem');
const { requireAuth } = require('../middleware/authmiddleware');
const fs = require('fs');
const adController = require('../controller/adminController')




//post
router.post('/admin', adController.upload,adController.storeItem);

router.get('/admin',adController.addToAdmin);

router.get('/',requireAuth,adController.addToUser); 

router.get('/menu',requireAuth,adController.addToMenu); 

  router.get('/order',requireAuth,(req, res)=>{
    res.render('order')
  });

  
  router.get('/cart',requireAuth,(req, res)=>{
    res.render('cart')
  })


  router.get('/edit/:id', async (req, res) => {
    try {
        let id = req.params.id;
        let items = await Item.findById(id).exec();
        
        if (!items) {
            return res.redirect('/admin');
        }
        
        res.render('edit', { items: items });
    } catch (err) {
        console.error(err);
        res.redirect('/admin');
    }
});


router.post('/update/:id',adController.upload, async(req, res)=>{
    let id = req.params.id;
    let new_image ='';
    if(req.file){
        new_image = req.file.filename;
        try{
            fs.unlink('./uploads/'+req.body.old_image);
        }catch(err){
            console.log(err);
        }
    }else{
        new_image = req.body.old_image;
    }
    Item.findByIdAndUpdate(id,{
        name: req.body.name,
        desc:req.body.desc,
        price:req.body.price,
        image: new_image
    })
}, (err, result)=>{
    if(err){
        res.json({message:"error"})
    }else{
        res.json({message:"err"})
    }
})

    
module.exports={router};
